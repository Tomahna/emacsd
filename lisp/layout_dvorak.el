(require 'evil-mc)
(require 'evil)
(require 'expand-region)
(require 'flycheck)
(require 'hydra)
(require 'ivy)
(require 'projectile)
(require 'smartparens)
(require 'treemacs)

(use-package hydra)

(defhydra hydra-sp ()
  "smartparens"
  ("n" sp-forward-slurp-sexp)
  ("h" sp-backward-slurp-sexp)
  ("N" sp-forward-barf-sexp)
  ("H" sp-backward-barf-sexp)
  ("c" sp-beginning-of-sexp)
  ("t" sp-end-of-sexp)
  ("{" sp-rewrap-sexp)
  ("d" sp-kill-sexp))

(defun mudefine-key (KEY FUN &rest KEYMAPS)
  (dolist (KEYMAP KEYMAPS)
    (define-key KEYMAP KEY FUN)))

;; Key unbinding
(define-key global-map (kbd "C-h h") nil)
(define-key global-map (kbd "M-1") nil)
(define-key global-map (kbd "M-2") nil)
(define-key global-map (kbd "M-3") nil)
(define-key global-map (kbd "M-4") nil)
(define-key global-map (kbd "M-5") nil)
(define-key global-map (kbd "M-6") nil)
(define-key global-map (kbd "M-7") nil)
(define-key global-map (kbd "M-8") nil)
(define-key global-map (kbd "M-9") nil)
(define-key global-map (kbd "M-0") nil)

(evil-define-key nil treemacs-mode-map (kbd "C-c f") 'treemacs-create-file)
(evil-define-key nil treemacs-mode-map (kbd "C-c d") 'treemacs-create-dir)
(evil-define-key nil treemacs-mode-map (kbd "M-c") 'treemacs-move-project-up)
(evil-define-key nil treemacs-mode-map (kbd "M-t") 'treemacs-move-project-down)
(evil-define-key nil treemacs-mode-map (kbd "C-c d") 'treemacs-create-dir)
(evil-define-key nil global-map        (kbd "<f5>") 'revert-buffer)
(evil-define-key nil magit-mode-map    (kbd "<f5>") 'magit-refresh)

;; Window navigation
(use-package buffer-move)
(mudefine-key (kbd "M-h")     'windmove-left          treemacs-mode-map evil-normal-state-map)
(mudefine-key (kbd "M-n")     'windmove-right         treemacs-mode-map evil-normal-state-map)
(mudefine-key (kbd "M-t")     'windmove-down          treemacs-mode-map evil-normal-state-map)
(mudefine-key (kbd "M-c")     'windmove-up            treemacs-mode-map evil-normal-state-map)
(mudefine-key (kbd "M-H")     'buf-move-left          treemacs-mode-map evil-normal-state-map)
(mudefine-key (kbd "M-N")     'buf-move-right         treemacs-mode-map evil-normal-state-map)
(mudefine-key (kbd "M-T")     'buf-move-down          treemacs-mode-map evil-normal-state-map)
(mudefine-key (kbd "M-C")     'buf-move-up            treemacs-mode-map evil-normal-state-map)
(mudefine-key (kbd "M-0")     'treemacs-select-window treemacs-mode-map evil-normal-state-map)
(mudefine-key (kbd "M-1")     'winum-select-window-1  treemacs-mode-map evil-normal-state-map)
(mudefine-key (kbd "M-2")     'winum-select-window-2  treemacs-mode-map evil-normal-state-map)
(mudefine-key (kbd "M-3")     'winum-select-window-3  treemacs-mode-map evil-normal-state-map)
(mudefine-key (kbd "M-4")     'winum-select-window-4  treemacs-mode-map evil-normal-state-map)
(mudefine-key (kbd "M-5")     'winum-select-window-5  treemacs-mode-map evil-normal-state-map)
(mudefine-key (kbd "M-6")     'winum-select-window-6  treemacs-mode-map evil-normal-state-map)
(mudefine-key (kbd "M-7")     'winum-select-window-7  treemacs-mode-map evil-normal-state-map)
(mudefine-key (kbd "M-8")     'winum-select-window-8  treemacs-mode-map evil-normal-state-map)
(mudefine-key (kbd "M-9")     'winum-select-window-9  treemacs-mode-map evil-normal-state-map)
(mudefine-key (kbd "M-<tab>") 'ivy-switch-buffer   evil-normal-state-map evil-visual-state-map)

;; Smartparens Keys
(evil-define-key 'motion smartparens-mode-map (kbd "g > (") 'sp-backward-barf-sexp)
(evil-define-key 'motion smartparens-mode-map (kbd "g < (") 'sp-backward-slurp-sexp)
(evil-define-key 'motion smartparens-mode-map (kbd "g < )") 'sp-forward-barf-sex)
(evil-define-key 'motion smartparens-mode-map (kbd "g > )") 'sp-forward-slurp-sex)
(evil-define-key 'motion smartparens-mode-map (kbd "g s d") 'sp-splice-sexp)
(evil-define-key 'motion smartparens-mode-map (kbd "g s c") 'sp-rewrap-sexp)
(evil-define-key 'motion smartparens-mode-map (kbd "g s (") 'sp-wrap-round)
(evil-define-key 'motion smartparens-mode-map (kbd "g s )") 'sp-wrap-round)
(evil-define-key 'motion smartparens-mode-map (kbd "g s {") 'sp-wrap-curly)
(evil-define-key 'motion smartparens-mode-map (kbd "g s }") 'sp-wrap-curly)
(evil-define-key 'motion smartparens-mode-map (kbd "g s [") 'sp-wrap-square)
(evil-define-key 'motion smartparens-mode-map (kbd "g s ]") 'sp-wrap-square)
(evil-define-key 'motion smartparens-mode-map (kbd "g s >") (lambda (&optional arg) (interactive "P")(sp-wrap-with-pair "<")))
(evil-define-key 'motion smartparens-mode-map (kbd "g s <") (lambda (&optional arg) (interactive "P")(sp-wrap-with-pair "<")))
(evil-define-key 'motion smartparens-mode-map (kbd "g s \"") (lambda (&optional arg) (interactive "P")(sp-wrap-with-pair "\"")))
(evil-define-key 'motion smartparens-mode-map (kbd "g s o") (lambda (&optional arg) (interactive "P")(sp-wrap-with-pair " ")))

;; Comment
(define-key evil-normal-state-map (kbd ";") 'evilnc-comment-or-uncomment-lines)
(define-key evil-visual-state-map (kbd ";") 'comment-or-uncomment-region)

;; TODO Disable only locally
(define-key flycheck-mode-map "\C-c" nil)
(define-key projectile-mode-map "\C-c" nil)
(define-key ivy-minibuffer-map "\C-c" 'ivy-previous-line)
(define-key ivy-minibuffer-map "\C-t" 'ivy-next-line)

;; Insert Mode Keys
(define-key evil-insert-state-map (kbd "C-h") 'backward-char)
(define-key evil-insert-state-map (kbd "C-t") 'next-line)
(define-key evil-insert-state-map (kbd "C-c") 'previous-line)
(define-key evil-insert-state-map (kbd "C-n") 'forward-char)
(define-key evil-insert-state-map (kbd "C-r") 'forward-word)
(define-key evil-insert-state-map (kbd "C-g") 'backward-word)
(define-key evil-insert-state-map (kbd "C-R") 'end-of-line)
(define-key evil-insert-state-map (kbd "C-G") 'beginning-of-line)

(define-key evil-insert-state-map (kbd "S-SPC") 'company-complete)
(evil-define-key 'insert 'yas-minor-mode-map (kbd "S-SPC") yas-maybe-expand)

;; Projectile bindings
(evil-ex-define-cmd "q" 'evil-window-delete)
(evil-ex-define-cmd "W" 'evil-save)
(evil-ex-define-cmd "pf" 'projectile-find-file)
(evil-ex-define-cmd "p4f" 'projectile-find-file-other-window)
(evil-ex-define-cmd "p5f" 'projectile-find-file-other-frame)
(evil-ex-define-cmd "pc" 'counsel-etags-list-tag)
(evil-ex-define-cmd "pg" 'counsel-rg)
(evil-ex-define-cmd "pr" 'projectile-replace)
(evil-ex-define-cmd "ps" 'projectile-switch-project)

;; Major Modes specific keys
;; Scala
(evil-define-key 'normal 'scala-mode-map (kbd "C-c C-v r") 'lsp-ui-peek-find-references)
(evil-define-key 'normal 'scala-mode-map (kbd "C-c C-v f") 'lsp-format-buffer)

;; (evil-define-key 'normal 'lsp-ui-peek-mode-map (kbd "c") 'lsp-ui-peek--select-prev)
;; (evil-define-key 'normal 'lsp-ui-peek-mode-map (kbd "t") 'lsp-ui-peek--select-next)
